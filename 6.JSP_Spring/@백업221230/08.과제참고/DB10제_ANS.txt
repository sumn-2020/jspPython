1. 남녀 성별 인원수 조회
--CASE2
SELECT
    (
        SELECT COUNT(*) FROM MEMBER 
        WHERE SUBSTR(MEM_REGNO2, 1, 1) = '1' OR SUBSTR(MEM_REGNO2, 1, 1) = '3'
    ) M
   , (
        SELECT COUNT(*) FROM MEMBER 
        WHERE SUBSTR(MEM_REGNO2, 1, 1) = '2' OR SUBSTR(MEM_REGNO2, 1, 1) = '4'
    ) F
FROM DUAL;
--CASE2
SELECT 
COUNT(CASE WHEN SUBSTR(MEM_REGNO2, 1, 1) = '1' OR SUBSTR(MEM_REGNO2, 1, 1) = '3' THEN 1 END) M
,COUNT(CASE WHEN SUBSTR(MEM_REGNO2, 1, 1) = '2' OR SUBSTR(MEM_REGNO2, 1, 1) = '4' THEN 1 END) F
FROM MEMBER;

2. 지금까지 한번도 상품을 구매한 적이 없는 회원의 인적사항 조회(아이디, 이름, 이메일)

SELECT MEM_ID, MEM_NAME, MEM_MAIL
FROM MEMBER
WHERE MEM_ID NOT IN (SELECT CART_MEMBER FROM CART);

3. 등록된 상품이 한건도 없는 상품분류 조회(상품분류코드, 분류명)
SELECT LPROD_GU, LPROD_NM
FROM LPROD
WHERE LPROD_GU NOT IN (SELECT PROD_LGU FROM PROD);

4. 지금까지 가장 많이 팔린 상품 조회(상품코드, 상품명, 상품분류명, 거래처명, 마일리지)
WITH CART_SUM AS (
    SELECT CART_PROD, SUM(CART_QTY) QTY_SUM
    FROM CART
    GROUP BY CART_PROD
    ORDER BY 2 DESC
)
SELECT     
    MAX(PROD_ID) KEEP(DENSE_RANK LAST ORDER BY QTY_SUM, PROD_ID) PROD_ID
    , MAX(PROD_NAME) KEEP(DENSE_RANK LAST ORDER BY QTY_SUM, PROD_ID) PROD_NAME
    , MAX(LPROD_NM) KEEP(DENSE_RANK LAST ORDER BY QTY_SUM, PROD_ID) LPROD_NM
    , MAX(BUYER_NAME) KEEP(DENSE_RANK LAST ORDER BY QTY_SUM, PROD_ID) BUYER_NAME
    , MAX(QTY_SUM) MAX_QTY       
FROM CART_SUM INNER JOIN PRODVIEW ON (CART_PROD = PROD_ID);

5. 지금까지 가장 적게 팔린 상품 조회(상품코드, 상품명, 상품분류명, 거래처명, 마일리지)
WITH CART_SUM AS (
    SELECT 
        PROD_ID, PROD_NAME, LPROD_NM, BUYER_NAME
        , NVL(
            (
                SELECT SUM(CART_QTY) 
                FROM CART WHERE CART_PROD = PROD_ID
            ), 0
        ) QTY_SUM
    FROM PRODVIEW
    ORDER BY QTY_SUM DESC, PROD_ID
)
SELECT     
    MIN(PROD_ID) KEEP(DENSE_RANK FIRST ORDER BY QTY_SUM, PROD_ID) PROD_ID
    , MIN(PROD_NAME) KEEP(DENSE_RANK FIRST ORDER BY QTY_SUM, PROD_ID) PROD_NAME
    , MIN(LPROD_NM) KEEP(DENSE_RANK FIRST ORDER BY QTY_SUM, PROD_ID) LPROD_NM
    , MIN(BUYER_NAME) KEEP(DENSE_RANK FIRST ORDER BY QTY_SUM, PROD_ID) BUYER_NAME
    , MIN(QTY_SUM) MIN_QTY       
FROM CART_SUM;

6. 거래처 중 거래 품목 수가 가장 많은 거래처 조회(거래처코드, 거래처명, 거래처분류명, 담당자명)
WITH BUYERVIEW AS (
    SELECT 
        BUYER_ID, BUYER_NAME, LPROD_NM, BUYER_CHARGER 
        , (SELECT COUNT(PROD_ID) FROM PROD WHERE PROD_BUYER = BUYER_ID) PROD_COUNT
    FROM BUYER INNER JOIN LPROD ON (BUYER_LGU = LPROD_GU)   
    ORDER BY PROD_COUNT, BUYER_ID
)
SELECT 
    MAX(BUYER_ID) KEEP (DENSE_RANK FIRST ORDER BY PROD_COUNT DESC, BUYER_ID) BUYER_ID
    , MAX(BUYER_NAME) KEEP (DENSE_RANK FIRST ORDER BY PROD_COUNT DESC, BUYER_ID) BUYER_NAME
    , MAX(LPROD_NM) KEEP (DENSE_RANK FIRST ORDER BY PROD_COUNT DESC, BUYER_ID) LPROD_NM
    , MAX(BUYER_CHARGER) KEEP (DENSE_RANK FIRST ORDER BY PROD_COUNT DESC, BUYER_ID) BUYER_CHARGER
    , MAX(PROD_COUNT) MAX_COUNT
FROM BUYERVIEW;    

7.   거래처 중 거래 품목 수가 가장 적은 거래처 조회(거래처코드, 거래처명, 거래처분류명, 담당자명)

WITH BUYERVIEW AS (
    SELECT 
        BUYER_ID, BUYER_NAME, LPROD_NM, BUYER_CHARGER 
        , (SELECT COUNT(PROD_ID) FROM PROD WHERE PROD_BUYER = BUYER_ID) PROD_COUNT
    FROM BUYER INNER JOIN LPROD ON (BUYER_LGU = LPROD_GU)   
    ORDER BY PROD_COUNT, BUYER_ID
)
SELECT 
    MIN(BUYER_ID) KEEP (DENSE_RANK FIRST ORDER BY PROD_COUNT, BUYER_ID) BUYER_ID
    , MIN(BUYER_NAME) KEEP (DENSE_RANK FIRST ORDER BY PROD_COUNT, BUYER_ID) BUYER_NAME
    , MIN(LPROD_NM) KEEP (DENSE_RANK FIRST ORDER BY PROD_COUNT, BUYER_ID) LPROD_NM
    , MIN(BUYER_CHARGER) KEEP (DENSE_RANK FIRST ORDER BY PROD_COUNT, BUYER_ID) BUYER_CHARGER
    , MIN(PROD_COUNT) MIN_COUNT
FROM BUYERVIEW;    

8. 남녀 성별 각각 구매율이 높은 상품 조회(성별, 상품코드, 상품명, 분류명)

WITH MEMBERVIEW AS 
(
    SELECT MEM_ID
        , CASE 
            WHEN SUBSTR(MEM_REGNO2, 1, 1) = '1' OR SUBSTR(MEM_REGNO2, 1, 2) = '3' THEN 'M'
            WHEN SUBSTR(MEM_REGNO2, 1, 1) = '2' OR SUBSTR(MEM_REGNO2, 1, 2) = '4' THEN 'F'
        END MEM_GEN
    FROM MEMBER
), GENVIEW AS (
    SELECT 
        CART_PROD, MEM_GEN
        , COUNT(*) GEN_COUNT
    FROM CART INNER JOIN MEMBERVIEW ON (CART_MEMBER = MEM_ID)
    GROUP BY MEM_GEN, CART_PROD
    ORDER BY MEM_GEN, 3 DESC, CART_PROD
)
SELECT 
    MAX(MEM_GEN) KEEP (DENSE_RANK FIRST ORDER BY GEN_COUNT DESC, CART_PROD) MEM_GEN
    , MAX(CART_PROD) KEEP (DENSE_RANK FIRST ORDER BY GEN_COUNT DESC, CART_PROD) PROD_ID
    , MAX(PROD_NAME) KEEP (DENSE_RANK FIRST ORDER BY GEN_COUNT DESC, CART_PROD) PROD_NAME
    , MAX(LPROD_NM) KEEP (DENSE_RANK FIRST ORDER BY GEN_COUNT DESC, CART_PROD) LPROD_NM
    , MAX(GEN_COUNT) 
FROM GENVIEW INNER JOIN PRODVIEW ON (CART_PROD = PROD_ID)
GROUP BY MEM_GEN;

9. 각 회원별 구매 총액 조회(회원아이디, 회원명, 구매총액)

WITH CARTPRICE AS (
    SELECT CART_MEMBER, SUM(CART_QTY * PROD_PRICE) SUM_PRICE
    FROM CART INNER JOIN PROD ON (CART_PROD = PROD_ID)
    GROUP BY CART_MEMBER
)
SELECT MEM_ID, MEM_NAME, NVL(SUM_PRICE, 0) SUM_PRICE
FROM MEMBER LEFT OUTER JOIN CARTPRICE ON (MEM_ID = CART_MEMBER)
ORDER BY 3 DESC, 1;

10. 각 상품별 구매왕 조회(구매왕아이디, 회원명, 구매총액)

WITH CARTALLPRICE AS (
    SELECT CART_PROD, CART_MEMBER
           , SUM(CART_QTY) SUM_QTY
           , SUM(CART_QTY * PROD_PRICE) SUM_PRICE
    FROM CART INNER JOIN PROD ON (CART_PROD = PROD_ID)
    GROUP BY CART_MEMBER, CART_PROD
    ORDER BY CART_PROD, CART_MEMBER
)
SELECT
    MAX(CART_PROD) KEEP (DENSE_RANK FIRST ORDER BY SUM_PRICE DESC, CART_MEMBER) PROD_ID
    , MAX(CART_MEMBER) KEEP (DENSE_RANK FIRST ORDER BY SUM_PRICE DESC, CART_MEMBER) MEM_ID
    , MAX(MEM_NAME) KEEP (DENSE_RANK FIRST ORDER BY SUM_PRICE DESC, CART_MEMBER) MEM_NAME
    , MAX(SUM_QTY) KEEP (DENSE_RANK FIRST ORDER BY SUM_PRICE DESC, CART_MEMBER) SUM_QTY
    , MAX(SUM_PRICE) SUM_PRICE
FROM CARTALLPRICE INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
GROUP BY CART_PROD;
 

